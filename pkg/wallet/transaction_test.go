package wallet

import (
	"testing"

	"github.com/stretchr/testify/assert"
)

func TestTransaction_HasAutoGeneratedID(t *testing.T) {
	m := new(MockedKeyPairGenerator)
	m.On("Generate").Return([]byte{}, []byte{})

	// perform test
	tx := NewTransaction(NewWallet(m), "receiver", 0)

	// test verification
	assert.NotEmpty(t, tx.GetID())
}

func TestTransaction_OutputHasAmountToReceiver(t *testing.T) {
	m := new(MockedKeyPairGenerator)
	m.On("Generate").Return([]byte{}, []byte{})

	// perform test
	tx := NewTransaction(NewWallet(m), "receiver", 1)

	// test verification
	assert.Equal(t, uint64(1), tx.GetOutput()["receiver"])
}

func TestTransaction_OutputHasRemainingBalanceOfSenderWallet(t *testing.T) {
	m := new(MockedKeyPairGenerator)
	senderPubKey := []byte("pubkey-sender")
	m.On("Generate").Return(senderPubKey, []byte{})
	w := NewWallet(m)

	// perform test
	tx := NewTransaction(w, "receiver", 1)

	// test verification
	assert.Equal(t, uint64(999), tx.GetOutput()[w.PubKeyHex()])
}
